<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Listening</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/eruda/2.2.0/eruda.js"></script>
    <script>eruda.init();</script>
</head>
<body style="background-color: black; color:white;" id="body-id">
    <div class="container">
        <div class="row">
            <div class="col-sm-2">
                <h4 id="right">Right: </h4>
            </div>
            <div class="col-sm-8">
                <select id="voices" style="width: 100%;"></select>
            </div>
            <div class="col-sm-2">
                <h4 id="wrong">Wrong: </h4>
            </div>
        </div>
        <div style="display: flex; flex-direction: column; justify-content: center; height: 95vh;">
            <div style="display: flex; flex-direction: row; justify-content: center;">
                <button id="listen-voice">
                    Listen
                </button>
            </div>
            <div>
                <div style="display: flex; flex-direction: row; justify-content: center; margin-top: 1%">
                    <input type="text" id="input-text" placeholder="Enter answer Here" autocomplete="off" />
                </div>
                <div style="display: flex; flex-direction: row; justify-content: center; margin-top: 1%;">
                    <button id="submit-btn" style="width: 100px;">Submit</button>
                    <button id="dk-btn" style="width: 100px">Don't Know</button>
                </div>
            </div>
            <div style="display: flex; flex-direction: row; justify-content: center;">
                <h4 id="status">Correct/Wrong Status</h4>
            </div>
        </div>
    </div>

    
    
    <script>

        let list_words = [
            ["わたし", ['i', 'me']],
            ["あなた", ['you']],
            ['あの人', ['that person', 'he', 'she']],
            ['先生', ['teacher', 'instructor', 'professor']],
            ['学生', ['student']],
            ['会社員', ['company employee']],
            ['社員', ['employee']],
            ['銀行員', ['bank employee']],
            ['医者', ['doctor']],
            ['研究者', ['researcher']],
            ['大学', ['university']],
            ['病院', ['hospital']],
            ['だれ', ['who']],
            ['歳', ['years old']],
        ]
        let usedWords = []
        let currentWord = 0;
        let correct = []
        let wrong = []
        let voices = []

        const synth = window.speechSynthesis;

        let voicesElement = document.getElementById('voices')
        let statusElement = document.getElementById('status')
        let rightElement = document.getElementById('right')
        let wrongElement = document.getElementById('wrong')

        function getRndInteger(min, max) {
            return Math.floor(Math.random() * (max - min) ) + min;
        }
        function getVoices() {
            if (voices.length !== 0) return
            voices = synth.getVoices()
            voices.forEach(voice => {
                if(voice.lang === 'ja-JP' || voice.lang === 'ja_JP' || voice.lang === 'jpn-JPN')  {
                    let opt = document.createElement('option')
                    opt.text = voice.name
                    voicesElement.add(opt)
                    console.log('added')
                }
                console.log(voice.lang)
            })
            statusElement.innerHTML = "Voices Loaded: " + voices.length
        }
        function newWord() {
            let w = getRndInteger(0, list_words.length)
            if(usedWords.length == list_words.length)
            {
                statusElement.innerHTML = "Tis Over"
                return
            }
            if (typeof usedWords.find((s) => s === w) !=='undefined')
                newWord()
            else {
                currentWord = w
                console.log("word is " + currentWord + " plus " + w)
                return
            }
        }

        document.getElementById('body-id').onload = () => {
            currentWord = getRndInteger(0, list_words.length)
            getVoices()
            if(synth.onvoiceschanged !== undefined) synth.onvoiceschanged = getVoices
        }

        document.getElementById('listen-voice').addEventListener('click', () => {
            if(synth.speaking)
                return
            const speechText = new SpeechSynthesisUtterance(list_words[currentWord][0])
            speechText.onend = () => {
                console.log('ended')
                statusElement.innerHTML = "Type the meaning above"
            }
            voices.forEach(voice => {
                if(voice.name === voicesElement.options[voicesElement.selectedIndex].value)
                    {
                        speechText.voice = voice
                        console.log(voice.name)
                    }
            })
            console.log(speechText.voice.lang)
            synth.speak(speechText)
            statusElement.innerHTML = "Listen"

        })

        document.getElementById('submit-btn').onclick = () => {
            let val = document.getElementById('input-text').value.toLowerCase()
            document.getElementById('input-text').value = ''
            if (val === "" || typeof val === 'undefined')
            {
                statusElement.innerHTML = "Something is wrong, please try again"
                return
            }
            if(typeof list_words[currentWord][1].find((s) => s.toLowerCase() === val) !== 'undefined')
            {
                statusElement.innerHTML = "Correct answer"
                correct.push(currentWord)
            }
            else 
            {
                statusElement.innerHTML = "Wrong answer"
                wrong.push(currentWord)
            }
            usedWords.push(currentWord)
            newWord()
            rightElement.innerHTML = "Right: " + correct.length
            wrongElement.innerHTML = "Wrong: " + wrong.length
        }
        
    </script>
</body>
</html>